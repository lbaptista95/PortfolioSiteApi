// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using PortfolioSiteApi.Data;

#nullable disable

namespace PortfolioSiteApi.Migrations
{
    [DbContext(typeof(AppDbContext))]
    [Migration("20240822182324_GettingSkillsWithProject")]
    partial class GettingSkillsWithProject
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.7")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("PortfolioSiteApi.Models.JobProposal", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Benefits")
                        .HasColumnType("integer");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("Email")
                        .HasColumnType("integer");

                    b.Property<int>("RecruiterName")
                        .HasColumnType("integer");

                    b.Property<int>("Requirements")
                        .HasColumnType("integer");

                    b.Property<int>("Salary")
                        .HasColumnType("integer");

                    b.Property<string>("SeniorityLevel")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<int>("UserId")
                        .HasColumnType("integer");

                    b.HasKey("Id");

                    b.ToTable("job_proposals", (string)null);
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.Media", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Type")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("type");

                    b.Property<string>("Url")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("url");

                    b.HasKey("Id");

                    b.ToTable("media", (string)null);
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.MediaProject", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<int>("MediaId")
                        .HasColumnType("integer")
                        .HasColumnName("media_id");

                    b.Property<int>("MediaId1")
                        .HasColumnType("integer");

                    b.Property<int>("MediaId2")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId1")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId2")
                        .HasColumnType("integer");

                    b.HasKey("ProjectId", "MediaId");

                    b.HasIndex("MediaId");

                    b.HasIndex("MediaId1");

                    b.HasIndex("ProjectId1");

                    b.ToTable("media_project", (string)null);
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.Project", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<int>("Client")
                        .HasColumnType("integer")
                        .HasColumnName("client");

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("description");

                    b.Property<string>("EndDate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("end_date");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("StartDate")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("start_date");

                    b.HasKey("Id");

                    b.ToTable("projects", (string)null);
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.Skill", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.HasKey("Id");

                    b.ToTable("skills", (string)null);
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.SkillProject", b =>
                {
                    b.Property<int>("ProjectId")
                        .HasColumnType("integer")
                        .HasColumnName("project_id");

                    b.Property<int>("SkillId")
                        .HasColumnType("integer")
                        .HasColumnName("skill_id");

                    b.Property<int>("ProjectId1")
                        .HasColumnType("integer");

                    b.Property<int>("ProjectId2")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId1")
                        .HasColumnType("integer");

                    b.Property<int>("SkillId2")
                        .HasColumnType("integer");

                    b.HasKey("ProjectId", "SkillId");

                    b.HasIndex("ProjectId1");

                    b.HasIndex("SkillId");

                    b.HasIndex("SkillId1");

                    b.ToTable("skill_project", (string)null);
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("integer")
                        .HasColumnName("id");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<int>("Id"));

                    b.Property<string>("Company")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("company");

                    b.Property<string>("Contact")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("contact");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("email");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnType("boolean")
                        .HasColumnName("email_confirmed");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("name");

                    b.Property<string>("Password")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("password");

                    b.Property<string>("SocialUrl")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("social_url");

                    b.HasKey("Id");

                    b.ToTable("users", (string)null);
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.MediaProject", b =>
                {
                    b.HasOne("PortfolioSiteApi.Models.Media", null)
                        .WithMany("MediaProjects")
                        .HasForeignKey("MediaId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioSiteApi.Models.Media", "Media")
                        .WithMany()
                        .HasForeignKey("MediaId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioSiteApi.Models.Project", null)
                        .WithMany("MediaProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioSiteApi.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Media");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.SkillProject", b =>
                {
                    b.HasOne("PortfolioSiteApi.Models.Project", null)
                        .WithMany("SkillProjects")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioSiteApi.Models.Project", "Project")
                        .WithMany()
                        .HasForeignKey("ProjectId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioSiteApi.Models.Skill", null)
                        .WithMany("SkillProjects")
                        .HasForeignKey("SkillId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("PortfolioSiteApi.Models.Skill", "Skill")
                        .WithMany()
                        .HasForeignKey("SkillId1")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Project");

                    b.Navigation("Skill");
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.Media", b =>
                {
                    b.Navigation("MediaProjects");
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.Project", b =>
                {
                    b.Navigation("MediaProjects");

                    b.Navigation("SkillProjects");
                });

            modelBuilder.Entity("PortfolioSiteApi.Models.Skill", b =>
                {
                    b.Navigation("SkillProjects");
                });
#pragma warning restore 612, 618
        }
    }
}
